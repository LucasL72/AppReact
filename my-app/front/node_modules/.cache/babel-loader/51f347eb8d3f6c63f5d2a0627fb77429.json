{"ast":null,"code":"var _jsxFileName = \"/home/dev2/travaux/React/AppReact/my-app/src/components/Countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CardsCountries from \"./CardsCountries\";\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const [rangeValue, setRangeValue] = useState(50000000);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [isCrescent, setIsCrescent] = useState(false);\n  const radios = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"];\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => setData(res.data));\n  }, []);\n\n  const numberFormat = num => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"radio-container\",\n      children: radios.map((continent, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"continent\",\n          id: continent,\n          checked: continent === selectedRadio,\n          onChange: e => setSelectedRadio(e.target.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: continent,\n          children: continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), selectedRadio && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setSelectedRadio(\"\"),\n      children: \"Annuler recherche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Entrez le nom d'un pays (en anglais)\",\n      onChange: e => setSearchInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isCrescent ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setIsCrescent(false),\n      children: \"Tri d\\xE9croissant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setIsCrescent(true),\n      children: \"Tri croissant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1377482166\",\n      defaultValue: rangeValue,\n      onChange: e => setRangeValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [numberFormat(rangeValue), \" habitants\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.filter(country => country.region.includes(selectedRadio)).filter(country => country.population > rangeValue).filter(country => country.name.common.toLowerCase().includes(searchInput.toLowerCase())).sort((a, b) => {\n        if (isCrescent) {\n          return a.population - b.population;\n        } else {\n          return b.population - a.population;\n        }\n      }).map(country => /*#__PURE__*/_jsxDEV(CardsCountries, {\n        country: country\n      }, country.name.common, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Countries, \"hDWqUcB0HRZ0gOD1S/V/IfFLaiA=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/home/dev2/travaux/React/AppReact/my-app/src/components/Countries.js"],"names":["React","useEffect","useState","axios","CardsCountries","Button","Countries","data","setData","selectedRadio","setSelectedRadio","rangeValue","setRangeValue","searchInput","setSearchInput","isCrescent","setIsCrescent","radios","get","then","res","numberFormat","num","toString","replace","map","continent","index","e","target","id","value","marginBottom","filter","country","region","includes","population","name","common","toLowerCase","sort","a","b"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CardsCountries from \"./CardsCountries\";\nimport Button from '@mui/material/Button';\n\nconst Countries = () => {\n  const [data, setData] = useState([]);\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const [rangeValue, setRangeValue] = useState(50000000);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [isCrescent, setIsCrescent] = useState(false);\n  const radios = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"];\n\n  useEffect(() => {\n    axios\n      .get(\"https://restcountries.com/v3.1/all\")\n      .then((res) => setData(res.data));\n  }, []);\n\n  const numberFormat = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  };\n\n  return (\n    <div className=\"countries\">\n      <ul className=\"radio-container\">\n        {radios.map((continent, index) => (\n          <li key={index}>\n            <input\n              type=\"radio\"\n              name=\"continent\"\n              id={continent}\n              checked={continent === selectedRadio}\n              onChange={(e) => setSelectedRadio(e.target.id)}\n            />\n            <label htmlFor={continent}>{continent}</label>\n          </li>\n        ))}\n      </ul>\n      {selectedRadio && (\n        <Button variant=\"contained\" onClick={() => setSelectedRadio(\"\")}>Annuler recherche</Button>\n      )}\n      <br />\n      <input\n        type=\"text\"\n        placeholder=\"Entrez le nom d'un pays (en anglais)\"\n        onChange={(e) => setSearchInput(e.target.value)}\n      />\n\n      {isCrescent ? (\n        <Button variant=\"contained\" onClick={() => setIsCrescent(false)}>Tri décroissant</Button>\n      ) : (\n        <Button variant=\"contained\" onClick={() => setIsCrescent(true)}>Tri croissant</Button>\n      )}\n\n      <br />\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1377482166\"\n        defaultValue={rangeValue}\n        onChange={(e) => setRangeValue(e.target.value)}\n      />\n      <p style={{ marginBottom: \"20px\" }}>\n        {numberFormat(rangeValue)} habitants\n      </p>\n      <ul>\n        {data\n          .filter((country) => country.region.includes(selectedRadio))\n          .filter((country) => country.population > rangeValue)\n          .filter((country) =>\n            country.name.common\n              .toLowerCase()\n              .includes(searchInput.toLowerCase())\n          )\n          .sort((a, b) => {\n            if (isCrescent) {\n              return a.population - b.population;\n            } else {\n              return b.population - a.population;\n            }\n          })\n          .map((country) => (\n            <CardsCountries key={country.name.common} country={country} />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Countries;"]},"metadata":{},"sourceType":"module"}